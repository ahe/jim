---
layout: quirkey_code_multi
title: Sammy - Documentation - API
github_name: sammy
current_version: 0.5.0
nav:
  - name: Overview
    link: ../index.html
  - name: Installation
    link: ../install.html
  - name: Documentation
    link: index.html
    sub:
      - name: Routes
        link: routes.html
      - name: Events
        link: events.html
      - name: Plugins
        link: plugins.html
      - name: FAQ
        link: faq.html
      - name: API
        link: api.html
  - name: Tutorials
    link: ../tutorials/index.html
  - name: Resources
    link: ../resources.html
---

h2(project_name). Sammy

h2. Documentation

h3. FAQ

h4. How can I use templates?

Currently you can render templates using ERB style notation. 
{% highlight erb %}
<div id="mytemplate">
  <%= variable %>
</div>
{% endhighlight %}

Internally, Sammy uses a modified "$.srender":http://github.com/atduskgreg/srender to do the parsing. Both @template()@ and @partial()@ use this method internally.
See "the API":api.html for more details.

h4. How do I load views from other files?

In an @EventContext@ the @partial()@ method can asynchronously load views and enact on the data, appending, replacing or parsing it.

h4. Can I run multiple apps in the same document?

Yes! Each @Sammy.Application@ is bound to a specific element and also has a unique ID and namespace. Since the whole Application is encapsulated in an object, the app can actually be passed around and modified during the course of a request.

You can also bind different applications to different elements on the page, basically creating 'controllers' for the individual elements. For example:

{% highlight javascript %}

var menu = $.sammy(function() {
  
  element_selector = '#menu';
  
  get('#/', function() { ... //load the initial menu });
  
  get('#/:nav', function() { ...// show the subnav for :nav});
  
});

var main = $.sammy(function() {
  
  this.element_selector = '#main';
  
  this.get('#/', function() { ... //load the index });
  
  this.get('#/:nav', function() { ...// show the page coresponding to :nav});
  
});

$(function() {
  menu.run();
  main.run('#/');
});
{% endhighlight %}

With this pattern, you can separate the functionality for the menu and the main element, while responding to the exact same events.

h4. I want Sammy to do X!

That's awesome! Please feel free to fork "the project on github":http://github.com/quirkey/sammy and contact me if you have questions.